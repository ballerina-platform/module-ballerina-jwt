/*
 * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

plugins {
    id "com.github.spotbugs" version "4.0.5"
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "de.undercouch.download" version "4.0.4"
    id "net.researchgate.release" version "2.8.0"
}

ext.puppycrawlCheckstyleVersion = project.puppycrawlCheckstyleVersion
ext.ballerinaLangVersion = project.ballerinaLangVersion
ext.stdlibCacheVersion = project.stdlibCacheVersion
ext.stdlibCryptoVersion = project.stdlibCryptoVersion
ext.stdlibLogVersion = project.stdlibLogVersion
ext.stdlibRegexVersion = project.stdlibRegexVersion
ext.stdlibTimeVersion = project.stdlibTimeVersion
ext.stdlibUuidVersion = project.stdlibUuidVersion
// Transitive dependencies
ext.stdlibTaskVersion = project.stdlibTaskVersion

allprojects {
    group = project.group
    version = project.version

    apply plugin: 'jacoco'
    apply plugin: 'maven-publish'

    repositories {
        mavenLocal()
        maven {
            url = 'https://maven.wso2.org/nexus/content/repositories/releases/'
        }
        maven {
            url = 'https://maven.wso2.org/nexus/content/groups/wso2-public/'
        }
        maven {
            url = 'https://repo.maven.apache.org/maven2'
        }
        maven {
            url = 'https://maven.pkg.github.com/ballerina-platform/ballerina-lang'
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }
        maven {
            url = 'https://maven.pkg.github.com/ballerina-platform/module-ballerina-cache'
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }
        maven {
            url = 'https://maven.pkg.github.com/ballerina-platform/module-ballerina-crypto'
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }
        maven {
            url = 'https://maven.pkg.github.com/ballerina-platform/module-ballerina-log'
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }
        maven {
            url = 'https://maven.pkg.github.com/ballerina-platform/module-ballerina-regex'
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }
        maven {
            url = 'https://maven.pkg.github.com/ballerina-platform/module-ballerina-time'
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }
        maven {
            url = 'https://maven.pkg.github.com/ballerina-platform/module-ballerina-uuid'
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }
        // Transitive dependencies
        maven {
            url = 'https://maven.pkg.github.com/ballerina-platform/module-ballerina-task'
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }
    }
}

subprojects {
    apply plugin: 'java'

    configurations {
        ballerinaStdLibs
    }
    dependencies {
        /* Standard libraries */
        ballerinaStdLibs "org.ballerinalang:cache-ballerina:${stdlibCacheVersion}"
        ballerinaStdLibs "org.ballerinalang:crypto-ballerina:${stdlibCryptoVersion}"
        ballerinaStdLibs "org.ballerinalang:log-ballerina:${stdlibLogVersion}"
        ballerinaStdLibs "org.ballerinalang:regex-ballerina:${stdlibRegexVersion}"
        ballerinaStdLibs "org.ballerinalang:time-ballerina:${stdlibTimeVersion}"
        ballerinaStdLibs "org.ballerinalang:uuid-ballerina:${stdlibUuidVersion}"
        // Transitive dependencies
        ballerinaStdLibs "org.ballerinalang:task-ballerina:${stdlibTaskVersion}"
    }
}

def moduleVersion = project.version.replace("-SNAPSHOT", "")

release {
    failOnPublishNeeded = false
    failOnSnapshotDependencies = true

    buildTasks = ['build']
    versionPropertyFile = 'gradle.properties'
    tagTemplate = 'v$version'

    git {
        requireBranch = "release-${moduleVersion}"
        pushToRemote = 'origin'
    }
}

task build {
    dependsOn('jwt-ballerina:build')
}
